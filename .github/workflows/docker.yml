name: Build and Push Docker Image

# This workflow builds Docker images using binaries from the rolling release

on:
  workflow_run:
    workflows: ["Rolling Release"]
    branches: [main]
    types: [completed]
  release:
    types: [published]

jobs:
  docker:
    # Only run if the rolling release workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'release' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download rolling release binary
        if: github.event_name == 'workflow_run'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Download the Linux AMD64 binary from the latest release
          gh release download latest --pattern "feedspool_latest_linux_amd64.tar.gz" --dir ./temp
          cd temp
          tar -xzf feedspool_latest_linux_amd64.tar.gz
          mv feedspool ../
          cd ..
          rm -rf temp
          chmod +x feedspool

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: lmorchard/feedspool
          tags: |
            # Latest tag for main branch
            type=raw,value=latest,enable={{is_default_branch}}
            # Version tag for releases (e.g., v1.2.3)
            type=ref,event=tag
          labels: |
            org.opencontainers.image.title=feedspool
            org.opencontainers.image.description=RSS/Atom feed aggregator and static site generator
            org.opencontainers.image.vendor=lmorchard

      - name: Build and push Docker image (from release binary)
        if: github.event_name == 'workflow_run'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.prebuilt
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Build and push Docker image (from source)
        if: github.event_name == 'release'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64